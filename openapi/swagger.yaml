openapi: 3.0.0
info:
  title: Product API for Pactflow demo
  description: ""
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/MConneely/ProductAPI/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /products:
    get:
      summary: List all products
      description: Returns all products
      operationId: getAllProducts
      responses:
        "200":
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "400":
          description: Invalid ID supplied
          content: {}
    post:
      summary: Create a product
      description: Creates a new product
      operationId: createProduct
      requestBody:
        description: Create a new Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            examples:
              application/json:
                value:
                  id: "1234"
                  type: food
                  price: 42
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /product/{id}:
    get:
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductByID
      parameters:
      - name: id
        in: path
        description: ID of product to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Product not found
          content: {}
  /users:
    get:
      summary: Produces list of all users
      description: Produces list of all users
      operationId: getUsers
      responses:
        "200":
          description: successful operation
          content: {}
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Product not found
          content: {}
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
components:
  schemas:
    Product:
      required:
      - id
      - name
      - price
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        version:
          type: string
        price:
          type: number
      additionalProperties: false
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/Product'
